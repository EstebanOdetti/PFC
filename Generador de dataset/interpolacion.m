% INTERPOLACIONfunction [PHI_interpolada,t] = interpolacion(xnode,PHI,icone,neighb,model,DIR,NEU,ROB,xi,yi,tipo_metodo_numerico)  % punto xi donde queremos interpolar  % punto yi donde queremos interpolar  % tipo_metodo_numerico == 1 es diferecinas, 2 es volumenes, 3 es elementos    ############ INTERPOLACION EN DIFERENCIAS FINITAS##################  if (tipo_metodo_numerico == 1)    disp(' Comienza interpolacion ');    % X son los valores de xnode     % Y son los valores de xnode    X = xnode(:,1);    Y = xnode(:,2);    PHI_interpolada = zeros(size(PHI,2),1);    t = zeros(size(PHI,2),1);    for i = 1 : size(PHI,2) % recorremos los tiempos      % Z son los valores de PHI en un tiempo i determinado      Z = PHI(:,i);       % hacemos la interpolacion con la funcion griddata      t(i) = i;      PHI_interpolada(i) = griddata (X, Y, Z, xi, yi);    endfor  endif    if (tipo_metodo_numerico == 2)    ############ INTERPOLACION EN VOLUMENES FINITOS##################    disp(' Comienza interpolacion ');    % Initialize cells    [~,~,cells] = fvm2d_initialize(xnode,icone,neighb,model.th,model.k);    % Update cell's face value (temperature)    [cells] = fvm2d_update_cells(cells,DIR,NEU,ROB,PHI(:,end));    [X,Y,~,~] = fvm2d_mesh_coord(xnode,icone,neighb,cells);    [Z] = fvm2d_mesh_values(PHI(:,end),X,Y,xnode,icone,neighb,cells,DIR);    % Cell's centroids    cx = zeros(model.ncells,1);    cy = zeros(model.ncells,1);    for P = 1 : model.ncells        cx(P) = cells(P).cx;        cy(P) = cells(P).cy;    endfor    % INTERPOLACION    PHI_interpolada = zeros(size(PHI,2),1);    t = zeros(size(PHI,2),1);    for i = 1 : size(PHI,2) % recorremos los tiempos      % Z son los valores de PHI en un tiempo i determinado      Z = PHI(:,i);      % Update cell's face value (temperature)      [cells] = fvm2d_update_cells(cells,DIR,NEU,ROB,Z);      [Z] = fvm2d_mesh_values(Z,X,Y,xnode,icone,neighb,cells,DIR);      % hacemos la interpolacion con la funcion griddata      t(i) = i;      PHI_interpolada(i) = griddata (X, Y, Z, xi, yi);    endfor  endif  if (tipo_metodo_numerico == 3)    ############ INTERPOLACION EN ELEMENTOS FINITOS##################        disp(' Comienza interpolacion ');    % X son los valores de xnode     % Y son los valores de xnode    X = xnode(:,1);    Y = xnode(:,2);    PHI_interpolada = zeros(size(PHI,2),1);    t = zeros(size(PHI,2),1);    for i = 1 : size(PHI,2) % recorremos los tiempos      % Z son los valores de PHI en un tiempo i determinado      Z = PHI(:,i);       % hacemos la interpolacion con la funcion griddata      t(i) = i;      PHI_interpolada(i) = griddata (X, Y, Z, xi, yi);    endfor  endif  figureplot(t,PHI_interpolada)  endfunction